variables:
    TZ: "America/New_York"
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
    APT_CACHE_DIR: "$CI_PROJECT_DIR/apt-cache"
    POSTGRES_DB: custom_db
    POSTGRES_USER: custom_user
    POSTGRES_PASSWORD: custom_pass
    FARADAY_USER: custom_user
    FARADAY_PASSWORD: custom_pass
    FARADAY_EMAIL: test@test.com
    FARADAY_REF: white/dev
    EXECUTOR_DIR: ./basic_executor.py

workflow:
  rules:
    - if: $CI_MERGE_REQUEST_ID
      when: never
    - when: always

cache:
  paths:
    - "$CI_PROJECT_DIR/.cache/pip"
    - "$CI_PROJECT_DIR/apt-cache"


before_script:
    - mkdir -pv $APT_CACHE_DIR

stages:
    - testing
    - post_testing
    - integration-build
    - integration-test
    - build
    - publish
    - deploy

services:
    - postgres:latest


flake8:
    image: python:3
    stage: .pre
    script:
      - pip install flake8
      - flake8 .

black:
    image: python:3
    stage: .pre
    script:
      - pip install black
      - black --line-length=119 --check .

.unit_tests_base:
    stage: testing
    coverage: '/TOTAL\s+\d+\s+\d+\s+(\d+%)/'
    script:
        - source faraday_venv/bin/activate
        - openssl req -x509 -nodes -days 1095 -newkey rsa:2048 -keyout tests/data/ok.key -out tests/data/ok.crt -subj "/CN=localhost"
        - openssl req -x509 -nodes -days 1095 -newkey rsa:2048 -keyout tests/data/other.key -out tests/data/wrong.crt -subj "/CN=localhost"
        - mkdir run_from
        - cd run_from && mkdir logs && pytest ../tests/unittests --capture=sys -v --cov=../faraday_agent_dispatcher --cov-config=../tests/unittests/.coveragerc --color=yes --disable-warnings --junitxml=report.xml
        - cp report.xml ../
    artifacts:
      reports:
        junit: report.xml
      paths:
        - dist/*
        - run_from/logs/*
      expire_in: 7 days
    rules:
      - if: '$JUST_INTEGRATION'
        when: never
      - if: '$CI_COMMIT_REF_NAME =~ /^.*ci-test.*$/'
        when: never
      - when: on_success

.latest_unit_test_base:
  extends: .unit_tests_base
  before_script:
      - pip install virtualenv
      - apt-get update
      - apt-get install openssl
      - virtualenv faraday_venv
      - source faraday_venv/bin/activate
      - pip install .[test]

.alpha_unit_test_base:
  extends: .unit_tests_base
  before_script:
      - pip install virtualenv
      - apt-get update
      - apt-get install openssl
      - virtualenv faraday_venv
      - source faraday_venv/bin/activate
      - pip install --pre .[test] #It does not override alphas
  allow_failure: true
  rules:
    - if: '$CI_COMMIT_REF_NAME =~ /^(dev|master)$/'
      when: on_success
    - if: '$TEST_ALPHA'
      when: on_success

unit_test 3.7:
    extends: .latest_unit_test_base
    image: python:3.7

unit_test 3.8:
    extends: .latest_unit_test_base
    image: python:3.8

unit_test 3.9:
  extends: .latest_unit_test_base
  image: python:3.9

.unit_test 3.10: # To reactivate in beta (May 3rd 2021)
    extends: .latest_unit_test_base
    image: python:3.10-rc
    allow_failure: true

alpha_unit_test 3.7:
    extends: .alpha_unit_test_base
    image: python:3.7

alpha_unit_test 3.8:
    extends: .alpha_unit_test_base
    image: python:3.8

alpha_unit_test 3.9:
    extends: .alpha_unit_test_base
    image: python:3.9

.alpha_unit_test 3.10: # To reactivate in beta (May 3rd 2021)
    extends: .alpha_unit_test_base
    image: python:3.10-rc

integration_faraday:
    stage: post_testing
    variables:
        DISPATCHER_REF: $CI_COMMIT_REF_NAME
    trigger:
        project: faradaysec/devops
        strategy: depend
    rules:
        - if: '$CI_COMMIT_REF_NAME =~ /^(dev|master)$/'
          when: on_success
        - if: $INTEGRATION
          when: on_success


publish_pypi:
    image: python:3
    stage: publish
    script:
      - apt-get update -qy
      - apt-get install twine -y
      - python setup.py sdist bdist_wheel
      - twine upload -u $PYPI_USER -p $PYPI_PASS dist/* --verbose
    rules:
      - if: '$CI_COMMIT_TAG'
        when: on_success


#Historical integration test with faraday trigger
#integration_faraday:
#    stage: post_testing
#    script:
#        - apt-get update -qy
#        - apt-get install curl -y
#        - "curl -X POST -F token=$INTEGRATION_TOKEN -F ref=master -F \"variables[DISPATCHER_REF]=$CI_COMMIT_REF_NAME\" -F \"variables[FARADAY_REF]=$FARADAY_REF\" https://gitlab.com/api/v4/projects/15311100/trigger/pipeline"
#    only:
#        variables:
#            - $CI_COMMIT_REF_NAME =~ /^(dev|master)$/
#            - $INTEGRATION

include:
  - local: docs/.gitlab-ci.yml
  - local: .gitlab/ci/plugins-integration/.build-gitlab-ci.yml
  - local: .gitlab/ci/plugins-integration/.testing-gitlab-ci.yml
  - local: .gitlab/ci/build_ci/.build-gitlab-ci.yml
  - local: .gitlab/ci/publish/.publish-dockerhub-gitlab-ci.yml
